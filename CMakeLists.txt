cmake_minimum_required(VERSION 3.15)
project(DecayEngine)

include(GNUInstallDirs)

set (CMAKE_CXX_STANDARD 17)
#set (CMAKE_CXX_STANDARD 20)
#set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Xclang -fconcepts-ts")

set (ENGINE_TARGET_PATH ${CMAKE_SOURCE_DIR}/target)

string(TOUPPER ${CMAKE_BUILD_TYPE} BUILD_TYPE_U)
string(TOLOWER ${CMAKE_BUILD_TYPE} BUILD_TYPE_L)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${BUILD_TYPE_U} ${ENGINE_TARGET_PATH}/${BUILD_TYPE_L}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${BUILD_TYPE_U} ${ENGINE_TARGET_PATH}/${BUILD_TYPE_L}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${BUILD_TYPE_U} ${ENGINE_TARGET_PATH}/${BUILD_TYPE_L}/include)

foreach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})
    string(TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG_U)
    string(TOLOWER ${OUTPUTCONFIG} OUTPUTCONFIG_L)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG_U} ${ENGINE_TARGET_PATH}/${OUTPUTCONFIG_L}/bin)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG_U} ${ENGINE_TARGET_PATH}/${OUTPUTCONFIG_L}/lib)
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG_U} ${ENGINE_TARGET_PATH}/${OUTPUTCONFIG_L}/include)
endforeach(OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES)

add_subdirectory(DecFramework)
add_subdirectory(DecCore)